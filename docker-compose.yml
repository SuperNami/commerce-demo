version: "3.4"

services:

  nginx:
    image: registry.gitlab.com/dimages/nginx-drupal:2
    environment:
      DOMAIN: "${COMMERCE_DEMO_DOMAIN}"
      UPSTREAM: "${UPSTREAM}"
    depends_on:
      - php
    ports:
      - target: 80
        published: 8081
        protocol: tcp
        mode: host
    volumes:
      #- type: volume
      #  source: html
      #  target: /var/www/html
      - type: bind
        source: .
        target: /var/www/html
      - type: volume
        source: nginx_conf
        target: /etc/nginx/conf.d
    networks:
      app_net:
        ipv4_address: 172.16.240.50


  php:
    image: registry.gitlab.com/supernami/commerce-demo-ci-mirror:latest
    environment:
      DB_HOST: "${DB_HOST}"
      DB_PORT: "${DB_PORT}"
      DB_USER: "${COMMERCE_DEMO_DB_USER}"
      DB_PASSWORD: "${COMMERCE_DEMO_DB_PASSWORD}"
      DB_NAME: "${COMMERCE_DEMO_DB_NAME}"
      ACCOUNT_NAME: "${ACCOUNT_NAME}"
      SMTP_SERVER: "${SMTP_SERVER}"
      SMTP_PORT: "${SMTP_PORT}"
      SMTP_USERNAME: "${SMTP_USERNAME}"
      SMTP_PASSWORD: "${SMTP_PASSWORD}"
      SMTP_EMAIL: "${SMTP_EMAIL}"
    volumes:
      #- type: volume
      #  source: html
      #  target: /var/www/html
      - type: bind
        source: .
        target: /var/www/html
      - type: volume
        source: conf
        target: /usr/local/etc
    networks:
      app_net:
        ipv4_address: 172.16.240.51


  solr:
    image: wodby/drupal-solr:8-5.5
    ports:
      - target: 8983
        published: 8983
        protocol: tcp
        mode: host
    networks:
      app_net:
        ipv4_address: 172.16.240.52


#  percona:
#    image: percona:latest
#    environment:
#      MYSQL_USER: "${COMMERCE_DEMO_DB_USER}"
#      MYSQL_PASSWORD: "${COMMERCE_DEMO_DB_PASSWORD}"
#      MYSQL_ROOT_PASSWORD: "${COMMERCE_DEMO_DB_ROOT_PASSWORD}"
#      MYSQL_DATABASE: "${COMMERCE_DEMO_DB_NAME}"
#    volumes:
#      - type: volume
#        source: db
#        target: /var/lib/mysql
#    networks:
#      app_net:
#        ipv4_address: 172.16.240.53


#  portainer:
#    image: portainer/portainer:latest
#    ports:
#      - target: 9000
#        published: 9000
#        protocol: tcp
#        mode: host
#    volumes:
#      - type: volume
#        source: data
#        target: /data
#      - type: bind
#        source: /var/run/docker.sock
#        target: /var/run/docker.sock
#    networks:
#      app_net:
#        ipv4_address: 172.16.240.54


volumes:
  nginx_conf:
  html:
  conf:
#  db:
#  data:


networks:
  app_net:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 172.16.240.0/24