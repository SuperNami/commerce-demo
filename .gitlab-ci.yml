# custom docker image based off the stock php one, includes Drupal dependencies and testing dependencies
# see details here: https://github.com/smmccabe/docker/blob/master/Dockerfile
image: smmccabe/drupal:latest
#image: smmccabe/drupal:php7
#image: smmccabe/drupal:php5.6

variables:
  MYSQL_DATABASE: drupal
  MYSQL_SQL_TO_RUN: 'GRANT ALL ON *.* TO "testrunner"@"%";'
  MYSQLD_RAM_SIZE: '1024'
  VERSION: "1"

# jobs do not need to be present for all stages, if a stage has no jobs it will just be ignored
stages:
  - test
  - build

code_standards:
  stage: test
  script:
    # runs the Drupal code standards checks on our custom code
    # the Drupal Code Standards come from the Coder module, which is automatically part of the base testing image
    - phpcs --standard=Drupal -n --extensions=php,module,inc,install,test,profile,theme,css,info,txt,md web/modules/custom
    - phpcs --standard=Drupal -n --extensions=php,module,inc,install,test,profile,theme,css,info,txt,md web/themes/custom --ignore=*.css

custom_tests_d8:
  stage: test
  when: manual

  services:
  - theasci/docker-mysql-tmpfs:latest

  script:
    # apache should be running by default, and does on my local, but gitlabci
    # prevents that for some reason, so we manually start it
    # the & is important so it doesn't block everything below it from running.
    - apache2-foreground > /dev/null 2>&1 &

    # move to the webroot
    - cp . /var/www/html/ -rf
    - cd /var/www/html

    # if you have issues with rate limiting, you'll want to setup a github key variable and uncomment the config line below
    # https://getcomposer.org/doc/articles/troubleshooting.md#api-rate-limit-and-oauth-tokens
    #- composer config -g github-oauth.github.com $DEPLOY_GITHUB

    - composer install

    #install the drupal site provided by the docker image so we can use it for testing
    - cd web
    - drush site-install standard --db-url='mysql://testrunner:@theasci__docker-mysql-tmpfs/drupal' -y

    - export SIMPLETEST_DB='mysql://testrunner:@theasci__docker-mysql-tmpfs/drupal'
    - export SIMPLETEST_BASE_URL=http://localhost
    - export BROWSERTEST_OUTPUT_DIRECTORY=/tmp
    #- ../vendor/phpunit/phpunit/phpunit -c core/phpunit.xml.dist --group SITENAME
    - echo 'No custom unit tests currently, edit config if they are added'

build:
  stage: build

  # NOTE: Master is also pushed to public accessible GitHub repo: https://github.com/AcroMedia/commerce-demo
  only:
    - master
    - UAT

  # this tells the build server to save these files between jobs, this keeps them to be deployed
  artifacts:
    paths:
      - bin
      - vendor
      - web

  script:
    - chmod +x entrypoint.sh
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/supernami/commerce-demo-ci-mirror:$VERSION --build-arg PATH=$PATH -f Dockerfile .
    - docker tag registry.gitlab.com/supernami/commerce-demo-ci-mirror:$VERSION registry.gitlab.com/supernami/commerce-demo-ci-mirror:latest
    - docker push registry.gitlab.com/supernami/commerce-demo-ci-mirror:$VERSION
    - docker push registry.gitlab.com/supernami/commerce-demo-ci-mirror:latest
